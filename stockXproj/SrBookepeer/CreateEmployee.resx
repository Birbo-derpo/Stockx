<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EHz7/wDO+88JBAQ88/8A/wD/AO++++//AP8A/wD984kABF88/wAxvv8A/wC8MBBAA89999//AP8A/wB9
        /wDfPIAAAQXPP+4vvks//rDDQQQFNNfffffPPffMIAAQRTPPv5vvv/rk9/8AjywkEEEEBDDSgDCBAAEE
        Fzzz/ub7/wBw3/8Arv7/AP7ywkUEEEEEEAAEEEEzzz7/ALW+/wCwAwMP/wC4r/8A/wDvPHKAQQQQQQQb
        PPPv/wDMb7/sAMMsNDf/AOOW/wD/AP7zzywwwkRzzz77/vNb7/oAM/748EDb/wCuKz//AP8A/wC88888
        +/8A/wDvNb77/wDAD/8Avn/rwwAt/wD7447b/wD/AP8A/wD/AP8A/vY77/8A7AADf+7zaX+vPDAQw+//
        APvnstrmttnvvv8A/jAAMf7sP7z2AKN76IEEEEBz7/8A/wD/AP8A/wD/AOAEAEP776N730H/xAAcEQEA
        AgIDAQAAAAAAAAAAAAARADAgQBBgcAH/2gAIAQMBAT8QKTQPDTvTY6brui9OdR2mMfAHw5sbGxjw6Tcx
        wcHBjWx4cWfcP//EABsRAQACAgMAAAAAAAAAAAAAABEgQFBwAGCA/9oACAECAQE/ENXESwaBO1GGPGxE
        4WzG/wD/xAAgEAEBAQEBAQEBAQEBAQEAAAARAAEQIDBAQVAhMWBx/9oACAEBAAE/EOs8ePc3jM83j5ef
        3uczmczevHyz1meNs27Nu22222/+W227zbYmzePGbNmbNmZnjx/714z1mZnrM8ZmZmZ68Z62zNu27bs2
        zbbs27PpnrNnp48eNmzMzM2TMz/zjNm27MzM2T5ZeM/9mbdm3Z493ZtmZ4z4Z48ZmePGZnjNmzM2bMzP
        GZmZmbNmZnm7xm3Znm7zbZt2e7NvjJmZnmTMzMzx4zxmZmZmZmZmZt2ZmZmZmZmZm3Zt2bZt2bdmbbd4
        276fDM2bzOM+HmceNm8zZmZmZmZmZmZmZmZmbdm3bdm3ZmeM93rMzZMzM9eOzMz4ZmZ8MzMzMzMzMzMz
        MzMzMzNuzbszx4+NevHjM+WZmeMzM8Z4zx49ZmZmZmZmZmZm3Zt2bdmbd7u+Hj4Znw8y3e7Pj+zM8Znm
        2eHjxmZmzePGZmZmbdm3fTb43w8e5bMz148fLxtnjxmZmZmbd4zM8ZmZm3ZmbZm23u73eMznf7M9ePP+
        8zrPGZsnuTPXy+WZmeMzMzM8eNuz7fm+n/nc8fyyfDMzPHrxmbd48zXjM93w+2/vreb1mfLMzPl5sz5b
        JmZmfi8fW+d23jx8b42yfg+2z4PzZmfzb3+z92fLx6+Hjz++Hr1t4z7/AO8bfO9Zn0834vhnj1mZ48Zm
        evGePhmZmZ6+Hj4bfP8A+TPln2z8nw934bx+rM8fgz632zzPDx+f8mZ4z82Z/Yz6Z+GWTMzPH5PHm/Jm
        bfq/Lfi/ifs/qz8DZb+h+WzPtn3vGfzszZ8MtmZ+W/hfo+3/AAX8O/Zs+TP6WZ+LPt/Dv0Zn8TP0/vwf
        g9Z+D9mZ8szx5s2/b+/mz4P+efF+GfB/x99b8H/Uflvx3658n/G234Nvh/I/q38b7Z+b8M8P4m392fR/
        A/Bnufk36Z9H/Efw7Pwz5t/P9XP89+j5Z9v5238X/vN/Y2e3/Cfns/B8vnJ+DP1zn8+e8/n234b9s/a9
        fszP13xnn+fJn/RZ+r8D/L235Z4z8Ofr3/4Rn5vvfOz1/VnwfxM/B+L7Zn4M/R9Zb9n4vhm328zr1mfg
        zMz9H2zMz8H67s3/2Q==
</value>
  </data>
</root>